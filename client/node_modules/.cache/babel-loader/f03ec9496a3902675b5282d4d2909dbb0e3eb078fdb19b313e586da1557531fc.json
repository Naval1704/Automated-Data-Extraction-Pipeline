{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSE\\\\PROJECTS\\\\Automated-Data-Extraction-Pipeline\\\\client\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styling/FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // ref to the file input element\n  const fileInputRef = /*#__PURE__*/React.createRef();\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile) {\n      setFile(droppedFile);\n      setError('');\n      setSuccess('');\n    }\n  };\n  const handleDoubleClick = e => {\n    fileInputRef.current.click();\n  };\n\n  // Uploading process \n  const handleUpload = () => {\n    if (!file) {\n      setError('Please select a file to upload.');\n      return;\n    }\n    setUploading(true);\n    setError('');\n    setSuccess('');\n    setTimeout(() => {\n      setUploading(false);\n      setSuccess('File uploaded successfully!');\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-box\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      onDoubleClick: handleDoubleClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-area\",\n        children: file ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop or Click to select a File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"JFKINAbxlesOvzz1cPZavAVd/XQ=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","uploading","setUploading","error","setError","success","setSuccess","fileInputRef","createRef","handleDragOver","e","preventDefault","stopPropagation","handleDrop","droppedFile","dataTransfer","files","handleDoubleClick","current","click","handleUpload","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","onDoubleClick","name","_c","$RefreshReg$"],"sources":["E:/CSE/PROJECTS/Automated-Data-Extraction-Pipeline/client/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport '../styling/FileUpload.css'\r\n\r\nfunction FileUpload() {\r\n    const [file, setFile] = useState(null) ;\r\n    const [uploading, setUploading] = useState(false) ;\r\n    const [error, setError] = useState('') ;\r\n    const [success, setSuccess] = useState('') ;\r\n\r\n\r\n    // ref to the file input element\r\n    const fileInputRef = React.createRef() ;\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault() ;\r\n        e.stopPropagation() ;\r\n    };\r\n\r\n    const handleDrop = (e) => {\r\n        e.preventDefault() ;\r\n        e.stopPropagation() ;\r\n        const droppedFile = e.dataTransfer.files[0] ;\r\n        if( droppedFile ){\r\n            setFile(droppedFile) ;\r\n            setError('') ;\r\n            setSuccess('') ;\r\n        }\r\n    };\r\n\r\n    const handleDoubleClick = (e) => {\r\n        fileInputRef.current.click() ;\r\n    };\r\n\r\n    // Uploading process \r\n    const handleUpload = () => {\r\n        if( !file ){\r\n            setError('Please select a file to upload.') ;\r\n            return;\r\n        }\r\n\r\n        setUploading(true) ;\r\n        setError('') ;\r\n        setSuccess('') ;\r\n\r\n        setTimeout(() =>{\r\n            setUploading(false) ;\r\n            setSuccess('File uploaded successfully!') ;\r\n        }, 2000) ;\r\n    };\r\n\r\n    return (\r\n    <div className='file-upload-container'>\r\n        <h2>Upload Your File</h2>\r\n        <div\r\n            className='file-upload-box'\r\n            onDragOver={handleDragOver}\r\n            onDrop={handleDrop}\r\n            onDoubleClick={handleDoubleClick}\r\n        >\r\n            <div className='file-upload-area'>\r\n                {file ? (\r\n                    <div className='file-info'>\r\n                        <p>{file.name}</p>\r\n                    </div>\r\n                ) : (\r\n                    <p>Drag & Drop or Click to select a File</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUpload"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}