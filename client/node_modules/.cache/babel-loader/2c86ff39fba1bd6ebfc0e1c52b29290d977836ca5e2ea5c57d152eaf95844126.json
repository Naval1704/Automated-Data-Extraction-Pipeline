{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSE\\\\PROJECTS\\\\Automated-Data-Extraction-Pipeline\\\\client\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styling/FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Reference to the file input element\n  const fileInputRef = /*#__PURE__*/React.createRef();\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setError('');\n      setSuccess('');\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile) {\n      setFile(droppedFile);\n      setError('');\n      setSuccess('');\n    }\n  };\n  const handleUpload = () => {\n    if (!file) {\n      setError('Please select a file to upload.');\n      return;\n    }\n\n    // Simulate the upload process\n    setUploading(true);\n    setError('');\n    setSuccess('');\n    setTimeout(() => {\n      setUploading(false);\n      setSuccess('File uploaded successfully!');\n    }, 2000); // Simulate a 2-second upload\n  };\n  const handleDoubleClick = () => {\n    // Trigger the file input dialog on double-click\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-box\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      onDoubleClick: handleDoubleClick // Trigger file input on double-click\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-area\",\n        children: [file ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop or Click to Select a File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"file-input\",\n          onChange: handleFileChange,\n          accept: \"image/*, .pdf\",\n          ref: fileInputRef // Using ref to trigger the file dialog programmatically\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"JFKINAbxlesOvzz1cPZavAVd/XQ=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","uploading","setUploading","error","setError","success","setSuccess","fileInputRef","createRef","handleFileChange","e","selectedFile","target","files","handleDragOver","preventDefault","stopPropagation","handleDrop","droppedFile","dataTransfer","handleUpload","setTimeout","handleDoubleClick","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","onDoubleClick","name","type","onChange","accept","ref","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/CSE/PROJECTS/Automated-Data-Extraction-Pipeline/client/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styling/FileUpload.css';\r\n\r\nfunction FileUpload() {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  // Reference to the file input element\r\n  const fileInputRef = React.createRef();\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (droppedFile) {\r\n      setFile(droppedFile);\r\n      setError('');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!file) {\r\n      setError('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    // Simulate the upload process\r\n    setUploading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    setTimeout(() => {\r\n      setUploading(false);\r\n      setSuccess('File uploaded successfully!');\r\n    }, 2000); // Simulate a 2-second upload\r\n  };\r\n\r\n  const handleDoubleClick = () => {\r\n    // Trigger the file input dialog on double-click\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <h2>Upload Your File</h2>\r\n      <div\r\n        className=\"file-upload-box\"\r\n        onDragOver={handleDragOver}\r\n        onDrop={handleDrop}\r\n        onDoubleClick={handleDoubleClick} // Trigger file input on double-click\r\n      >\r\n        <div className=\"file-upload-area\">\r\n          {file ? (\r\n            <div className=\"file-info\">\r\n              <p>{file.name}</p>\r\n            </div>\r\n          ) : (\r\n            <p>Drag & Drop or Click to Select a File</p>\r\n          )}\r\n          {/* Hidden file input, triggered by double-click */}\r\n          <input\r\n            type=\"file\"\r\n            className=\"file-input\"\r\n            onChange={handleFileChange}\r\n            accept=\"image/*, .pdf\"\r\n            ref={fileInputRef} // Using ref to trigger the file dialog programmatically\r\n          />\r\n        </div>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        {success && <p className=\"success-message\">{success}</p>}\r\n      </div>\r\n      <button\r\n        className=\"upload-button\"\r\n        onClick={handleUpload}\r\n        disabled={uploading}\r\n      >\r\n        {uploading ? 'Uploading...' : 'Upload File'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}